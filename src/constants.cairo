fn MAP_1() -> (Array<felt252>, (u128, u128)) {
    let mut map = array![
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
        'G',
    ];
    (map, (25, 25))
}
